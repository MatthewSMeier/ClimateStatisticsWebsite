N=20  #Number of points on the sphere
M=10000 #maximum number of iterations allowed
Mstop=M
pn=1:N
pd=pointsphere(N,c(-180,180),c(-90,90),c(0.99999,1))
pd
rd=(pi/180)*pd
rd
ra=1
x=ra*cos(rd[,2])*cos(rd[,1])
y=ra*cos(rd[,2])*sin(rd[,1])
z=ra*sin(rd[,1])
p=pr=cbind(x,y,z)
p
p[1,]=c(0,0,1)
p[2,2]=0
pa=qa=array(0, dim=c(N,3,M))
for (k in 1:M){pa[1,3,k]=1} #Make the first point on the north pole
pa[,,1]=p
pa[2,2,]=0
pa[,,1]
p
#verify pa[,,1]=p
dsq=matrix(0, nrow=N, ncol=N)
dsk=rep(0, M)
#For Point 2 to Point N
dsm=array(0, dim=c(N,N,3,M))
for(k in seq(1,M-1)){
for(i in seq(2,N)){
for(j in pn[-i]){
dsm[i,j,,k]= (pa[i,,k]-pa[j,,k])/sqrt(sum((pa[i,,k]-pa[j,,k])^2))
}
#qa[i,,k]=0
for(l in 1:3){qa[i,l,k+1]=sum(dsm[i,,l,k])}
pa[i,,k+1]=qa[i,,k+1]/sqrt(sum((qa[i,,k+1])^2))
}
#Comptute the sum of mutual distances
ta=pa
for (i in 1:N){
for (j in 1:N){dsq[i,j]=sqrt(sum((ta[i,,k]-ta[j,,k])^2))}
}
dsk[k]=(1/2)*sum(dsq)
#print(paste("Iteration Step=", k, ",    Total Distance =", format(dsk[k], digits=20)))
if(k >10 && dsk[k]-dsk[k-1] < 10^{-6}){break}
Mstop=k
}
print(paste("The stop step is Mstop=", Mstop))
#Lat and lon of the points
M=Mstop
latlon=ta
for (k in 1:M) {latlon[,,k]=car2sph(ta[,,k],deg=TRUE)}
for (k in 1:M){latlon[1,,k]=c(0,90,k)}
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 3, col="blue")
par(mar=c(4,4.5,3,1))
plot(3:Mstop, dsk[3:Mstop], type="l", col='blue',
cex.lab=1.5, cex.axis=1.5,
xlab="Number of Iterations",
ylab="Total Mutual Distance",
main=paste("Convergence of Interation for N=", N, "Point, Dist=", format(dsk[Mstop], digit=20))
)
Mstop
#[1] 2390
#Search for the U63 network:
#63 points uniformly distributed on a sphere
#By Samuel Shen
#29 January 2019
#install.packages("sphereplot")
library(sphereplot)
N=20  #Number of points on the sphere
M=10000 #maximum number of iterations allowed
Mstop=M
pn=1:N
pd=pointsphere(N,c(-180,180),c(-90,90),c(0.99999,1))
pd
rd=(pi/180)*pd
rd
ra=1
x=ra*cos(rd[,2])*cos(rd[,1])
y=ra*cos(rd[,2])*sin(rd[,1])
z=ra*sin(rd[,1])
p=pr=cbind(x,y,z)
p
p[1,]=c(0,0,1)
p[2,2]=0
pa=qa=array(0, dim=c(N,3,M))
for (k in 1:M){pa[1,3,k]=1} #Make the first point on the north pole
pa[,,1]=p
pa[2,2,]=0
pa[,,1]
p
#verify pa[,,1]=p
dsq=matrix(0, nrow=N, ncol=N)
dsk=rep(0, M)
#For Point 2 to Point N
dsm=array(0, dim=c(N,N,3,M))
for(k in seq(1,M-1)){
for(i in seq(2,N)){
for(j in pn[-i]){
dsm[i,j,,k]= (pa[i,,k]-pa[j,,k])/sqrt(sum((pa[i,,k]-pa[j,,k])^2))
}
#qa[i,,k]=0
for(l in 1:3){qa[i,l,k+1]=sum(dsm[i,,l,k])}
pa[i,,k+1]=qa[i,,k+1]/sqrt(sum((qa[i,,k+1])^2))
}
#Comptute the sum of mutual distances
ta=pa
for (i in 1:N){
for (j in 1:N){dsq[i,j]=sqrt(sum((ta[i,,k]-ta[j,,k])^2))}
}
dsk[k]=(1/2)*sum(dsq)
#print(paste("Iteration Step=", k, ",    Total Distance =", format(dsk[k], digits=20)))
if(k >10 && dsk[k]-dsk[k-1] < 10^{-6}){break}
Mstop=k
}
print(paste("The stop step is Mstop=", Mstop))
#Lat and lon of the points
M=Mstop
latlon=ta
for (k in 1:M) {latlon[,,k]=car2sph(ta[,,k],deg=TRUE)}
for (k in 1:M){latlon[1,,k]=c(0,90,k)}
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 3, col="blue")
par(mar=c(4,4.5,3,1))
plot(3:Mstop, dsk[3:Mstop], type="l", col='blue',
cex.lab=1.5, cex.axis=1.5,
xlab="Number of Iterations",
ylab="Total Mutual Distance",
main=paste("Convergence of Interation for N=", N, "Point, Dist=", format(dsk[Mstop], digit=20))
)
Mstop
#[1] 2390
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 3, col="blue")
Mstop
points(latlon[,1:2,500], pch = 16, col="red")
points(latlon[,1:2,200], pch = 16, col="red")
points(latlon[,1:2,100], pch = 16, col="red")
points(latlon[,1:2,50], pch = 16, col="red")
u63=latlon[,1:2,M]
u63
dsk[5]
dsk[100]
dsk[M]
dsk[Mstop]
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")
v20=matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
p=(1+sqrt(5))/2
v20=matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
p=(1+sqrt(5))/2
v20=(1/sqrt(3))*matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
v20
sum(v20[5]^2)
sum(v20[1]^2)
v20=matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
v20
sum(v20[1]^2)
v20=(1/sqrt(3))*matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
v20
sum(v20[1,]^2)
for (i in 1:N){
for (j in 1:N){dsq[i,j]=sqrt(sum((v20[i,,k]-v20[j,,k])^2))}
}
D20=(1/2)*sum(dsq)
for (i in 1:N){
for (j in 1:N){dsq[i,j]=sqrt(sum((v20[i,]-v20[j,])^2))}
}
D20=(1/2)*sum(dsq)
D20
round(D20, digits=10)
numeric(D20, digits=10)
format(D20, digit=20)
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
V20
p=(1+sqrt(5))/2
V20=(1/sqrt(3))*matrix(c(1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1,
1, -1, -1, -1, 1, -1, -1, -1, 1,
-1, -1, -1,
0,p,1/p,0,p,-1/p,0,-p,1/p,0,-p,-1/p,
1/p,0,p,1/p,0,-p,-1/p,0,p,-1/p,0,-p,
p,1/p,0,-p,1/p,0,p,-1/p,0,-p,-1/p,0), ncol=3,byrow=TRUE)
V20
for (i in 1:N){
for (j in 1:N){dsq[i,j]=sqrt(sum((V20[i,]-V20[j,])^2))}
}
D20=(1/2)*sum(dsq)
format(D20, digit=20)
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20),
"Dodecahedron vertices with distance = 264.72128893823060025")
)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-100,70, col=c("blue"),lty=1,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-150,90, col=c("blue"),lty=1,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("blue"),lty=1,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,95, col=c("blue"),lty=1,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,100, col=c("blue"),lty=1,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,100, col=c("blue"),lty=0,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,100, col=c("blue"),lty=0,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=2.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,115, col=c("blue"),lty=0,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=2.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
legend(-180,110, col=c("blue"),lty=0,lwd=2.0,
legend=c("Maximum distance"), pch=16)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,110, col=c("blue"),lty=0,lwd=2.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=2.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,110, col=c("blue"),lty=0,lwd=4.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
legend(-180,110, col=c("blue"),lty=0,lwd=6.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,110, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,110, col=c("blue"),lty=0,lwd=9.0, cex=3,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,110, col=c("blue"),lty=0,cex=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,110, col=c("blue"),lty=0,cex=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,110, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
legend(-190,110, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-200,110, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-200,110, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-200,90, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,90, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,80, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-180,99, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-180,90, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-190,109, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-190,99, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-195,115, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-195,105, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
par(mar=c(4.5,4.5,3,1))
plot(0,lwd=0.01,xlim=c(-180,180),ylim=c(-90,90),
panel.first = grid(),
xlab="Longitude", ylab="Latitude",
cex.lab=1.5,cex.axis=1.5,
main=paste("Number of Points N=", N, ", Dist=", format(dsk[Mstop], digit=20))
)
u63=latlon[,1:2,M]
points(latlon[,1:2,M-1], pch = 16, col="blue")#,
"Dodecahedron vertices with distance = 264.72128893823060025"
V20latlon=matrix(0,nrow=N,ncol=3)
for (k in 1:M) {V20latlon=car2sph(V20,deg=TRUE)}
for (k in 1:M){V20latlon[1,]=c(0,90,k)}
points(V20latlon, pch = 3, col="red")
legend(-199,119, col=c("blue"),lty=0,lwd=9.0,
legend=c("Maximum distance"),bty="n", pch=16)
legend(-199,109, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289"),bty="n", pch=3)
legend(-199,109, col=c("red"),lty=0,lwd=4.0,
legend=c("Dodecahedron vertices 264.721289", col="red"),bty="n", pch=3)
